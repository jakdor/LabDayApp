apply plugin: 'com.android.application'
apply plugin: 'kotlin-android'
apply plugin: 'kotlin-android-extensions'
apply plugin: 'kotlin-kapt'

project.ext {
    arch = "1.1.1"
    archExt = "1.1.1"
    archDb = "1.1.0"
    databindingCompilerVersion = "3.1.2"
    supportLibsVersion = "27.1.1"
    constraintLayoutVersion = "1.1.0"
    butterKnifeVersion = "8.8.1"
    glideVersion = "4.4.0"
    daggerVersion = "2.13"
    retrofitVersion = "2.3.0"
    okHttpVersion = "3.9.1"
    rxJavaVersion = "2.1.7"
    rxAndroidVersion = "2.0.1"
    concealVersion = "2.0.1"
    sqlBriteVersion = "3.1.0"
    gmsMapsVersion = "15.0.1"
    timberVersion = "4.7.0"

    junitVersion = "4.12"
    mockitoVersion = "2.13.0"
    robolectricVersion = "3.6.1"
    robolectricShadowsVersion = "3.3.2"
    androidTestRunnerVersion = "1.0.1"
    espressoVersion = "3.0.1"
    daggerMockVersion = "0.8.2"
    restMockVersion = "0.2.2"
    leakCanaryVersion = "1.5.4"
}

android {
    compileSdkVersion 27
    buildToolsVersion '27.0.3'
    defaultConfig {
        applicationId "com.jakdor.labday"
        minSdkVersion 21
        targetSdkVersion 27
        versionCode 5
        versionName "1.0.2"
        testInstrumentationRunner 'com.jakdor.labday.InstrumentationTestRunner'
        //testInstrumentationRunner "com.jakdor.labday.EspressoRunner"
    } //todo find way to automatically switch between testInstrumentationRunners
    buildTypes {
        release {
            minifyEnabled true
            shrinkResources true
            proguardFiles getDefaultProguardFile('proguard-android.txt'), 'proguard-rules.pro'
        }
    }
    dataBinding {
        enabled = true
    }
    testOptions {
        unitTests {
            includeAndroidResources = true
        }
    }
    compileOptions {
        sourceCompatibility JavaVersion.VERSION_1_8
        targetCompatibility JavaVersion.VERSION_1_8
    }
}

android.sourceSets {
    test {
        java.srcDirs += "$projectDir/src/testShared"
    }

    androidTest {
        java.srcDirs += "$projectDir/src/testShared"
    }
}

kapt {
    generateStubs = true
}

// Ensure the no-op dependency is always used in JVM tests.
configurations.all { config ->
    if (config.name.contains('LocalTests')
            || config.name.contains('JUnitInstrumentationTests')
            || config.name.contains('EspressoTests')) {
        config.resolutionStrategy.eachDependency { details ->
            if (details.requested.group == 'com.squareup.leakcanary' && details.requested.name == 'leakcanary-android') {
                details.useTarget(group: details.requested.group, name: 'leakcanary-android-no-op', version: details.requested.version)
            }
        }
    }
}

dependencies {
    implementation fileTree(dir: 'libs', include: ['*.jar'])
    implementation"org.jetbrains.kotlin:kotlin-stdlib-jdk7:$kotlin_version"

    kapt "com.android.databinding:compiler:$project.databindingCompilerVersion"

    //support libs
    implementation "com.android.support:appcompat-v7:$project.supportLibsVersion"
    implementation "com.android.support:support-v4:$project.supportLibsVersion"
    implementation "com.android.support:cardview-v7:$project.supportLibsVersion"
    implementation "com.android.support:design:$project.supportLibsVersion"
    implementation "com.android.support.constraint:constraint-layout:$project.constraintLayoutVersion"

    //android architecture
    kapt "android.arch.lifecycle:compiler:$project.archExt"
    implementation "android.arch.lifecycle:extensions:$project.archExt"
    implementation "android.arch.lifecycle:runtime:$project.arch"
    implementation "android.arch.persistence:db-framework:$project.archDb"

    //ButterKnife
    kapt "com.jakewharton:butterknife-compiler:$project.butterKnifeVersion"
    implementation "com.jakewharton:butterknife:$project.butterKnifeVersion"

    //Glide
    kapt "com.github.bumptech.glide:compiler:$project.glideVersion"
    implementation "com.github.bumptech.glide:glide:$project.glideVersion"

    //Dagger core
    kapt "com.google.dagger:dagger-compiler:$project.daggerVersion"
    implementation "com.google.dagger:dagger:$project.daggerVersion"

    //Dagger Android
    kapt "com.google.dagger:dagger-compiler:$project.daggerVersion"
    kapt "com.google.dagger:dagger-android-processor:$project.daggerVersion"
    implementation "com.google.dagger:dagger:$project.daggerVersion"
    implementation "com.google.dagger:dagger-android-support:$project.daggerVersion"

    //retrofit
    implementation "com.squareup.retrofit2:converter-gson:$project.retrofitVersion"
    implementation "com.squareup.retrofit2:retrofit:$project.retrofitVersion"
    implementation "com.squareup.retrofit2:adapter-rxjava2:$project.retrofitVersion"

    //okHttp
    implementation "com.squareup.okhttp3:okhttp:$project.okHttpVersion"
    implementation "com.squareup.okhttp3:logging-interceptor:$project.okHttpVersion"

    //rxJava
    implementation "io.reactivex.rxjava2:rxjava:$project.rxJavaVersion"
    implementation "io.reactivex.rxjava2:rxandroid:$project.rxAndroidVersion"

    //Conceal
    implementation "com.facebook.conceal:conceal:$project.concealVersion@aar"

    //SQLBrite
    implementation "com.squareup.sqlbrite3:sqlbrite:$project.sqlBriteVersion"

    //GMS
    implementation "com.google.android.gms:play-services-maps:$project.gmsMapsVersion"
    implementation "com.google.android.gms:play-services-location:$project.gmsMapsVersion"

    //Timber logger
    implementation "com.jakewharton.timber:timber:$project.timberVersion"

    //testing
    testImplementation "junit:junit:$project.junitVersion"
    testImplementation "org.mockito:mockito-core:$project.mockitoVersion"
    testImplementation "org.robolectric:robolectric:$project.robolectricVersion"
    testImplementation "org.robolectric:shadows-support-v4:$project.robolectricShadowsVersion"
    androidTestImplementation "org.mockito:mockito-android:$project.mockitoVersion"
    androidTestImplementation "com.github.andrzejchm.RESTMock:android:$project.restMockVersion"
    androidTestImplementation "com.android.support.test:runner:$project.androidTestRunnerVersion"
    androidTestImplementation "com.android.support.test.espresso:espresso-core:$project.espressoVersion"

    debugImplementation "com.squareup.leakcanary:leakcanary-android:$project.leakCanaryVersion"
    releaseImplementation "com.squareup.leakcanary:leakcanary-android-no-op:$project.leakCanaryVersion"
}
